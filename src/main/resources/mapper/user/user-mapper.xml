<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="user">
	<insert id="insertManager" parameterType="manager">
		insert into manager values(#{managerId}, #{managerPassword}, #{managerCode}, #{managerCodeImgOriginal},
		#{managerCodeImgRenamed}, #{managerName}, #{managerPhone}, #{managerEmail}, default, default)
	</insert>
	<insert id="insertMember" parameterType="member">
		insert into member values(#{memberId}, #{memberEmail}, #{memberPassword}, #{memberPhone}, default, default)
	</insert>
	<select id="checkDup" resultType="_int">
		select count(*) 
		from(select memberId as userId
     		 from(select memberId
          	 from member
         	 union all
          	 select managerId 
          	 from manager))
		where userId=#{userId}
	</select>
	<select id="selectOneMember" resultType="member">
		select *
		from member
		where memberId=#{userId}
	</select>
	<select id="selectOneManager" resultType="manager">
		select *
		from manager
		where managerId=#{userId}
	</select>
	
	<resultMap type="member" id="memberMap">
		
	</resultMap>
	
	<select id="selectByName" parameterType="string" resultMap="memberMap">
		select * from member where memberId like '%'||#{memberId}||'%'
	</select>
	<update id="updatePwd" parameterType="map">
		<if test="type=='member'">
		update member set memberPassword=#{newPwd} where memberId=#{userId} 
		</if>
		<if test="type=='manager'">
		update manager set managerPassword=#{newPwd} where managerId=#{userId} 
		</if>
	</update>
	<delete id="deleteUser">
		delete from ${division}
		<where>
			<if test="division == 'manager'">
				managerId = #{target}
			</if>
			<if test="division == 'member'">
				memberId = #{target}
			</if>
		</where>
	</delete>
	<update id="updateMember">
		update member set memberEmail=#{memberEmail}
		where memberId = #{memberId}
	</update>
	<update id="updateManager">
		update manager set managerPhone=#{managerPhone}, managerEmail=#{managerEmail}
		where managerId = #{managerId}
	</update>
	<select id="getReservationList" resultType="hashmap">
		select * 
		from reserved R join pcRoom P on R.reservedPcRoomNo=P.pcRoomNo
		<where>
			<if test="division == 'manager'">
			reservedPcRoomNo = #{target}	
			</if>
			<if test="division == 'member'">
			memberId = #{target}
			</if>
		</where>
	</select>
</mapper>
